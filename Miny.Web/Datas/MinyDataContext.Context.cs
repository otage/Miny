//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MINY.Web.Datas
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MinyDataContext : DbContext
    {
        public MinyDataContext()
            : base( "name=MinyDataContext" )
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<vItem> vItems { get; set; }
        public DbSet<vWallDetail> vWallDetails { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sCreateItem(Nullable<int> wallId, Nullable<int> authorId, string note, string url, string picturePath, string videoPath, Nullable<int> nbCol)
        {
            var wallIdParameter = wallId.HasValue ?
                new ObjectParameter("WallId", wallId) :
                new ObjectParameter("WallId", typeof(int));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var picturePathParameter = picturePath != null ?
                new ObjectParameter("PicturePath", picturePath) :
                new ObjectParameter("PicturePath", typeof(string));
    
            var videoPathParameter = videoPath != null ?
                new ObjectParameter("VideoPath", videoPath) :
                new ObjectParameter("VideoPath", typeof(string));
    
            var nbColParameter = nbCol.HasValue ?
                new ObjectParameter("NbCol", nbCol) :
                new ObjectParameter("NbCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sCreateItem", wallIdParameter, authorIdParameter, noteParameter, urlParameter, picturePathParameter, videoPathParameter, nbColParameter);
        }
    
        public virtual int sDeleteItem(Nullable<int> itemToDelete)
        {
            var itemToDeleteParameter = itemToDelete.HasValue ?
                new ObjectParameter("ItemToDelete", itemToDelete) :
                new ObjectParameter("ItemToDelete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sDeleteItem", itemToDeleteParameter);
        }
    }
}
